# Assuming 'data' is your DataFrame
# Create a string from column names and first row values
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
# Print the combined string
print(table1)
# Print the combined string
print(table_1)
View(data)
View(df_report_discussion)
gene_discussion <- df_report_discussion |> filter(SYMBOL %in% data$SYMBOL)
gene_discussion <- "Here is the get_discussion output from GuRu for this gene: SYMBOL Protein.names Gene.Ontology..molecular.function. Function..CC. LILRA1 Leukocyte immunoglobulin-like receptor subfamily A member 1 (CD85 antigen-like family member I) (Leukocyte immunoglobulin-like receptor 6) (LIR-6) (CD antigen CD85i) antigen binding [GO:0003823]; inhibitory MHC class I receptor activity [GO:0032396]; transmembrane signaling receptor activity [GO:0004888] FUNCTION: May act as receptor for class I MHC antigens."
gene_discussion
gene_discussion <- df_report_discussion |> filter(SYMBOL %in% data$SYMBOL)
gene_discussion
paste("Here is the variant interpretation output from GuRu", table_1)
# Assuming 'data' is your DataFrame
# Create a string from column names and first row values
table_1 <- paste("Here is the variant interpretation output from GuRu",
names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
# Create a string from column names and first row values
table_1 <- paste("Here is the variant interpretation output from GuRu",
names(table_1), table_1[1, ], sep=": ", collapse=". ")
# Create a string from column names and first row values
table_1 <- paste("Here is the variant interpretation output from GuRu",
names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
# Create a string from column names and first row values
table_1 <- paste("Here is the variant interpretation output from GuRu",
names(table_1), table_1[1, ], sep=": ", collapse=". ")
# Print the combined string
print(table_1)
gene_discussion
paste(table_1, gene_discussion, collapse=". ")
gene_discussion
gene_discussion <- df_report_discussion |> filter(SYMBOL %in% data$SYMBOL)
text_discussion <- paste(table_1, gene_discussion, collapse=". ")
# Predefined components -----
text_description <- "You are writing the variant interpretation step of a clinical genetics report in LaTeX format. It must be clear and succinct and therefore have no unrelated content so that the reader can understand. The is important to report the provided factual evidence correctly. This final result will be in LaTeX format with the section heading \\section{Evidence interpretation summary}."
# Table data and gene discussion information could be sourced from external data handling
text_variant_info <- "Here is a genetic variant for 1 patient in table 1 as detected by GuRu. Based on the ACMG.score and the numerous complex scoring functions of GuRu we say that this variant is pathogenic."
# Complete prompt construction for each loop
prompt <- paste(text_description, text_variant_info, text_discussion, sep=" ")
data_source <- "x"
prompt
gene_discussion <- df_report_discussion %>%
dplyr::filter(SYMBOL %in% data$SYMBOL) %>%
dplyr::mutate(discussion_text = paste("Here is the get_discussion output from GuRu for this gene: SYMBOL", Protein.names, Gene.Ontology..molecular.function., Function..CC., sep=" ", collapse=". ")) %>%
dplyr::pull(discussion_text)  # Extracting the discussion text as a single string
gene_discussion
table_1
# Concatenate 'table_1' and 'gene_discussion' into one string
text_discussion <- paste(table_1, gene_discussion, sep=". ")
text_discussion
# Real world application ----
data <- df_mim |> dplyr::slice(1)
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste("Here is the variant interpretation output from GuRu",
names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1
# Creating the text string by pasting column names and their respective values from the first row
table_1_text <- paste("Here is the variant interpretation output from GuRu",
sapply(names(table_1), function(col) paste(col, table_1[[1, col]], sep=": ")),
collapse=". ")
table_1_text
# Creating the text string by pasting column names and their respective values from the first row
table_1_text <- paste("Here is the variant interpretation output from GuRu",
sapply(names(table_1), function(col) paste(col, table_1[[1, col]], sep=": ")),
collapse=". ")
table_1_text
table_1
print(table_1_text)
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
table_1
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
_
# Creating the text string by pasting column names and their respective values from the first row
table_1_text <- paste("Here is the variant interpretation output from GuRu",
sapply(names(table_1), function(col) paste(col, table_1[[1, col]], sep=": ")),
collapse=". ")
table_1_text
"Here is the variant interpretation output from GuRu",
"Here is the variant interpretation output from GuRu",
df_report_discussion
discussion_text
Protein.names
df_report_discussion
output_dir <- "../data/"
custom_variable <- ""
df_report_discussion <- readr::read_tsv(file=(paste0(output_dir, "get_discussion/df_report_discussion_", custom_variable, ".tsv")))
df_mim <- data.table::fread( file="../../scicore_mirror/data/acmguru_data_20250107/ACMGuru_singlecase_df_report_v1_momic_samplecount_180_all_chr_rank1_mim.csv", sep = ",")
# run server -----
# install.packages("ollamar")
library(ollamar)
test_connection()
list_models()
# Real world application ----
data <- df_mim |> dplyr::slice(1)
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
# Creating the text string by pasting column names and their respective values from the first row
table_1_text <- paste("Here is the variant interpretation output from GuRu",
sapply(names(table_1), function(col) paste(col, table_1[[1, col]], sep=": ")),
collapse=". ")
gene_discussion <- df_report_discussion %>%
dplyr::filter(SYMBOL %in% data$SYMBOL) %>%
dplyr::mutate(discussion_text = paste("XXXXX Here is the get_discussion output from GuRu for this gene: SYMBOL", Protein.names, Gene.Ontology..molecular.function., Function..CC., sep=" ", collapse=". ")) %>%
dplyr::pull(discussion_text)  # Extracting the discussion text as a single string
gene_discussion
gene_discussion <- df_report_discussion %>%
dplyr::filter(SYMBOL %in% data$SYMBOL) %>%
dplyr::mutate(discussion_text = paste("    XXXXX     Here is the get_discussion output from GuRu for this gene: SYMBOL", Protein.names, Gene.Ontology..molecular.function., Function..CC., sep=" ", collapse=". ")) %>%
dplyr::pull(discussion_text)  # Extracting the discussion text as a single string
gene_discussion
gene_discussion <- df_report_discussion %>%
dplyr::filter(SYMBOL %in% data$SYMBOL) %>%
dplyr::mutate(discussion_text = paste("Here is the variant interpretation output from GuRu:", table_1, "
XXXXX     Here is the get_discussion output from GuRu for this gene: SYMBOL", Protein.names, Gene.Ontology..molecular.function., Function..CC., sep=" ", collapse=". ")) %>%
dplyr::pull(discussion_text)  # Extracting the discussion text as a single string
gene_discussion
class(table_1)
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
table_1
# Preparing the introduction text
intro_text <- "hello:"
# Combining the introduction text with table_1 into a single string
full_text <- paste(intro_text, table_1)
# Print the combined text
print(full_text)
# Combining the introduction text with table_1 into a single string
full_text <- paste(intro_text, table_1, intro_text)
# Print the combined text
print(full_text)
# Preparing the introduction text
intro_text <- "Here is the variant interpretation output from GuRu:"
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
# Preparing the introduction text
intro_text <- "Here is the variant interpretation output from GuRu:"
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
intro_text <- "Here is the variant interpretation output from GuRu:"
intro_text <- paste(intro_text, table_1, intro_text)
# Print the combined text
print(intro_text)
df_report_discussion
gene_discussion <- df_report_discussion %>%
dplyr::filter(SYMBOL %in% data$SYMBOL)
gene_discussion
table_2 <- paste(names(gene_discussion), gene_discussion[1, ], sep=": ", collapse=". ")
table_2
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
intro_text <- "Here is the variant interpretation output from GuRu:"
intro_text <- paste(intro_text, table_1, intro_text)
# Print the combined text
print(intro_text)
m
m
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
intro_text <- "Here is the variant interpretation output from GuRu:"
table_1 <- paste(intro_text, table_1, intro_text)
gene_discussion <- df_report_discussion %>% dplyr::filter(SYMBOL %in% data$SYMBOL)
gene_discussion <- paste(names(gene_discussion), gene_discussion[1, ], sep=": ", collapse=". ")
intro_text2 <- "Here is the get_discussion output from GuRu"
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
"genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
intro_text <- "Here is the variant interpretation output from GuRu:"
table_1 <- paste(intro_text, table_1)
# Print the combined text
print(table_1)
gene_discussion <- df_report_discussion %>% dplyr::filter(SYMBOL %in% data$SYMBOL)
gene_discussion <- paste(names(gene_discussion), gene_discussion[1, ], sep=": ", collapse=". ")
intro_text2 <- "Here is the get_discussion output from GuRu"
intro_text2 <- "Here is the get_discussion output from GuRu:"
table_2 <- paste(intro_text2, gene_discussion)
table_2
# Concatenate 'table_1' and 'gene_discussion' into one string
text_discussion <- paste(table_1, table_2)
text_discussion
# Predefined components -----
text_description <- "You are writing the variant interpretation step of a clinical genetics report in LaTeX format. It must be clear and succinct and therefore have no unrelated content so that the reader can understand. The is important to report the provided factual evidence correctly. This final result will be in LaTeX format with the section heading \\section{Evidence interpretation summary}."
# Table data and gene discussion information could be sourced from external data handling
text_variant_info <- "Here is a genetic variant for 1 patient in table 1 as detected by GuRu. Based on the ACMG.score and the numerous complex scoring functions of GuRu we say that this variant is pathogenic."
# Complete prompt construction for each loop
prompt <- paste(text_description, text_variant_info, text_discussion, sep=" ")
prompt
# Predefined components -----
text_description <- "
[1] You are writing the variant interpretation step of a clinical genetics report in LaTeX format.
[2] It must be clear and succinct and therefore have no unrelated content so that the reader can understand.
[3] The is important to report the provided factual evidence correctly but brief.
[4] This final result will be in LaTeX format with the section heading \\section{Evidence interpretation summary}."
# Table data and gene discussion information could be sourced from external data handling
text_variant_info <- "Here is a genetic variant for 1 patient in table 1 as detected by GuRu. Based on the ACMG.score and the numerous complex scoring functions of GuRu we say that this variant is pathogenic."
# Complete prompt construction for each loop
prompt <- paste(text_description, text_variant_info, text_discussion, sep=" ")
prompt
data_source <- "x"
model <- "llama3.2"
model <- "deepseek-r1"
# Simulating multiple entries handling
# Assuming 'generate' function and 'resp_process' are defined to handle the generation and processing of responses
responses <- lapply(1:length(data_source), function(i) {
# Start timing
start_time <- Sys.time()
# Assuming data_source contains different gene data for multiple patients
# Modify prompt with actual data from data_source[i]
modified_prompt <- prompt  # Here you would modify the prompt according to data_source[i]
# Generate response
resp <- generate(model, modified_prompt, stream = TRUE)
# Process and save response
processed_text <- resp_process(resp, "text")
writeLines(processed_text, con=paste0("Output_", i, ".txt"))
# Calculate elapsed time
elapsed_time <- difftime(Sys.time(), start_time, units="secs")
# Print model and time taken
cat("Model used:", model, "\nTime taken:", elapsed_time, "seconds\n")
return(processed_text)
})
# Review responses or use them as needed
responses
text_discussion
table_1 <- data |> dplyr::select(
"sample.id",
"ACMG_total_score",
"ACMG_count",
"SYMBOL",
"HGVSp",
"HGVSc",
"Consequence",
"IMPACT",
# "genotype",
"gnomAD_AF",
"mim_morbid_description")
table_1 <- paste(names(table_1), table_1[1, ], sep=": ", collapse=". ")
class(table_1)
intro_text <- "Here is the variant interpretation output from GuRu:"
table_1 <- paste(intro_text, table_1)
# Print the combined text
print(table_1)
gene_discussion <- df_report_discussion %>% dplyr::filter(SYMBOL %in% data$SYMBOL)
gene_discussion <- paste(names(gene_discussion), gene_discussion[1, ], sep=": ", collapse=". ")
intro_text2 <- "Here is the get_discussion output from GuRu:"
table_2 <- paste(intro_text2, gene_discussion)
# Concatenate 'table_1' and 'gene_discussion' into one string
text_discussion <- paste(table_1, table_2)
# Predefined components -----
text_description <- "
Create a section for a clinical genetics report in LaTeX format titled 'Evidence Interpretation Summary'. This section should clearly and succinctly interpret the genetic variant data from the patient sample. Highlight the critical aspects of the ACMG scoring indicating pathogenicity and explain the clinical relevance of the findings using the variant's genetic and protein function details.
Details to include:
- all data from `table_1` accurately reproduced.
- Associated Diseases.
- Protein Function Discussion: Summarize the function of the protein.
Use concise language appropriate for a clinical report, ensuring that each piece of evidence provided is directly relevant to the genetic interpretation. Format this summary to fit a LaTeX document structure with appropriate sectioning."
resp
resp_process(resp, "text")
# Predefined components -----
text_description <- "
Create a section for a clinical genetics report in LaTeX format titled 'Evidence Interpretation Summary'. This section should clearly and succinctly interpret the genetic variant data from the patient sample. Highlight the critical aspects of the ACMG scoring indicating pathogenicity and explain the clinical relevance of the findings using the variant's genetic and protein function details.
Details to include:
- all data from `table_1` accurately reproduced.
- Associated Diseases.
- Protein Function Discussion: Summarize the function of the protein.
Use concise language appropriate for a clinical report, ensuring that each piece of evidence provided is directly relevant to the genetic interpretation. Format this summary to fit a LaTeX document structure with appropriate sectioning."
# Table data and gene discussion information could be sourced from external data handling
text_variant_info <- "Here is a genetic variant for 1 patient in table 1 as detected by GuRu. Based on the ACMG total score, which is high, and the numerous complex scoring functions of GuRu we say that this variant is pathogenic. Genotype 2 would indicate autosomal recessive disease, and genotype 1 indicate dominant disease."
# Complete prompt construction for each loop
prompt <- paste(text_description, text_variant_info, text_discussion, sep=" ")
prompt
data_source <- "x"
model <- "llama3.2"
model <- "deepseek-r1"
responses <- lapply(1:length(data_source), function(i) {
start_time <- Sys.time()
# Generate response
resp <- generate(model, prompt, stream = TRUE)
# Process and save response
processed_text <- resp_process(resp, "text")
writeLines(processed_text, con=paste0("Output_", i, ".txt"))
elapsed_time <- difftime(Sys.time(), start_time, units="secs")
cat("Model used:", model, "\nTime taken:", elapsed_time, "seconds\n")
return(processed_text)
})
text_discussion <- paste(table_2)
text_discussion
# Predefined components -----
text_description <- "
Instructions for Creating the 'Evidence Interpretation Summary' Section in a Clinical Genetics Report:
Title: Begin with the section titled 'Evidence Interpretation Summary'.
Objective: Summarize the biological role of the gene/protein related to the pathogenic variant found in the patient.
Explanation of Clinical Relevance:
Discuss the protein function details and their implications in the disease context.
Highlight the clinical significance of the findings.
Pathogenicity Assessment:
Note that GuRu identified a pathogenic variant for one patient listed in Table 1.
Mention the high total score from GuRu and the complex scoring functions which support the classification of this variant as pathogenic.
Conclude that there is substantial evidence to consider this variant a likely causal genetic determinant of the disease.
Language and Formatting:
Use concise, clinically appropriate language.
Ensure all information provided is directly relevant to the genetic interpretation.
Format the summary to comply with the LaTeX document structure, using appropriate sectioning for clarity and readability.
"
# Predefined components -----
text_description <- "
Instructions for Creating the 'Evidence Interpretation Summary' Section in a Clinical Genetics Report:
Title: Begin with the section titled 'Evidence Interpretation Summary'.
Objective: Summarize the biological role of the gene/protein related to the pathogenic variant found in the patient.
Explanation of Clinical Relevance:
Discuss the protein function details and their implications in the disease context.
Highlight the clinical significance of the findings.
Pathogenicity Assessment:
Note that GuRu identified a pathogenic variant for one patient listed in Table 1.
Mention the high total score from GuRu and the complex scoring functions which support the classification of this variant as pathogenic.
Conclude that there is substantial evidence to consider this variant a likely causal genetic determinant of the disease.
Language and Formatting:
Use concise, clinically appropriate language.
Ensure all information provided is directly relevant to the genetic interpretation.
Format the summary to comply with the LaTeX document structure, using appropriate sectioning for clarity and readability.
"
# Complete prompt construction for each loop
prompt <- paste(text_description, text_discussion, sep=" ")
data_source <- "x"
model <- "llama3.2"
model <- "deepseek-r1"
responses <- lapply(1:length(data_source), function(i) {
start_time <- Sys.time()
# Generate response
resp <- generate(model, prompt, stream = TRUE)
# Process and save response
processed_text <- resp_process(resp, "text")
writeLines(processed_text, con=paste0("Output_", i, ".txt"))
elapsed_time <- difftime(Sys.time(), start_time, units="secs")
cat("Model used:", model, "\nTime taken:", elapsed_time, "seconds\n")
return(processed_text)
})
# Review responses or use them as needed
responses
# Review responses or use them as needed
responses
library(stringr)
processed_text <- responses[1]
processed_text
parts <- str_split(processed_text, "</think>", 2)
parts
extracted_text <- if(length(parts[[1]]) > 1) trimws(parts[[1]][2]) else ""
extracted_text
# Save the extracted text to file, naming with data source details and model
file_name <- paste0("Output_", data_source[i]$sample_id, "_", model, ".txt")
paste0("Output_", data_source, "_", model, ".txt")
# Save the extracted text to file, naming with data source details and model
file_name <- paste0("Output_", data_source, "_", model, ".txt")
writeLines(extracted_text, con=file_name)
??rtracklayer()
output_dir <- "../data/"
df_mim <- data.table::fread( file="../../scicore_mirror/data/acmguru_data_20250107/ACMGuru_singlecase_df_report_v1_momic_samplecount_180_all_chr_rank1_mim.csv", sep = ",")
# Data import ----
df_uniprot <- readGFF("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.gff")
# Data import ----
df_uniprot <- UniprotR::readGFF("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.gff")
# Data import ----
df_uniprot <- biomaRt::readGFF("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.gff")
# Data import ----
df_uniprot <- rtracklayer::readGFF("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.gff")
# colnames(df)[colnames(df) == 'oldName'] <- 'newName'
colnames(df_uniprot_meta)[colnames(df_uniprot_meta) == 'Entry'] <- 'seqid'
# df_uniprot <- readGFF("../data/uniprot_HUMAN_Q2TBE0_CWF19L2.gff")
df_uniprot_meta <- rtracklayer::read.csv("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.tab", sep="\t")
# df_uniprot <- readGFF("../data/uniprot_HUMAN_Q2TBE0_CWF19L2.gff")
df_uniprot_meta <- read.csv("../ref/uniprot/uniprot-filtered-organism%3A%22Homo+sapiens+%28Human%29+%5B9606%5D%22.tab", sep="\t")
